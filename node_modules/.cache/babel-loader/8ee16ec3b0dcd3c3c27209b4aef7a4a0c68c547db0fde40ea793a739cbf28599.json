{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\janu3\\\\GitHub\\\\Online-Auction\\\\auction-system\\\\src\\\\context\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { supabase } from '../utils/supabaseClient';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Check active sessions and sets the user\n    const initializeAuth = async () => {\n      try {\n        const {\n          data: {\n            session\n          }\n        } = await supabase.auth.getSession();\n        if (session !== null && session !== void 0 && session.user) {\n          var _session$user$user_me;\n          const extendedUser = {\n            id: session.user.id,\n            email: session.user.email || '',\n            created_at: session.user.created_at || new Date().toISOString(),\n            username: ((_session$user$user_me = session.user.user_metadata) === null || _session$user$user_me === void 0 ? void 0 : _session$user$user_me.username) || ''\n          };\n          setUser(extendedUser);\n        }\n      } catch (error) {\n        console.error('Error initializing auth:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    initializeAuth();\n\n    // Listen for changes on auth state\n    const {\n      data: {\n        subscription\n      }\n    } = supabase.auth.onAuthStateChange(async (_event, session) => {\n      if (session !== null && session !== void 0 && session.user) {\n        var _session$user$user_me2;\n        const extendedUser = {\n          id: session.user.id,\n          email: session.user.email || '',\n          created_at: session.user.created_at || new Date().toISOString(),\n          username: ((_session$user$user_me2 = session.user.user_metadata) === null || _session$user$user_me2 === void 0 ? void 0 : _session$user$user_me2.username) || ''\n        };\n        setUser(extendedUser);\n      } else {\n        setUser(null);\n      }\n      setLoading(false);\n    });\n    return () => subscription.unsubscribe();\n  }, []);\n  const signUp = async (email, password, username) => {\n    try {\n      const {\n        data,\n        error\n      } = await supabase.auth.signUp({\n        email,\n        password,\n        options: {\n          data: {\n            username: username\n          }\n        }\n      });\n      if (error) throw error;\n      if (data.user) {\n        const {\n          error: profileError\n        } = await supabase.from('users').insert([{\n          id: data.user.id,\n          username,\n          email\n        }]);\n        if (profileError) throw profileError;\n      }\n    } catch (error) {\n      console.error('Signup error:', error);\n      throw error;\n    }\n  };\n  const signIn = async (email, password) => {\n    try {\n      const {\n        error\n      } = await supabase.auth.signInWithPassword({\n        email,\n        password\n      });\n      if (error) throw error;\n    } catch (error) {\n      console.error('Signin error:', error);\n      throw error;\n    }\n  };\n  const signOut = async () => {\n    try {\n      const {\n        error\n      } = await supabase.auth.signOut();\n      if (error) throw error;\n    } catch (error) {\n      console.error('Signout error:', error);\n      throw error;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      loading,\n      signUp,\n      signIn,\n      signOut\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","supabase","jsxDEV","_jsxDEV","AuthContext","undefined","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","initializeAuth","data","session","auth","getSession","_session$user$user_me","extendedUser","id","email","created_at","Date","toISOString","username","user_metadata","error","console","subscription","onAuthStateChange","_event","_session$user$user_me2","unsubscribe","signUp","password","options","profileError","from","insert","signIn","signInWithPassword","signOut","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/janu3/GitHub/Online-Auction/auction-system/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\r\nimport { supabase } from '../utils/supabaseClient';\r\nimport { ExtendedUser, AuthContextType } from '../types';\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const [user, setUser] = useState<ExtendedUser | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Check active sessions and sets the user\r\n    const initializeAuth = async () => {\r\n      try {\r\n        const { data: { session } } = await supabase.auth.getSession();\r\n        if (session?.user) {\r\n          const extendedUser: ExtendedUser = {\r\n            id: session.user.id,\r\n            email: session.user.email || '',\r\n            created_at: session.user.created_at || new Date().toISOString(),\r\n            username: session.user.user_metadata?.username || '',\r\n          };\r\n          setUser(extendedUser);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error initializing auth:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    initializeAuth();\r\n\r\n    // Listen for changes on auth state\r\n    const { data: { subscription } } = supabase.auth.onAuthStateChange(async (_event, session) => {\r\n      if (session?.user) {\r\n        const extendedUser: ExtendedUser = {\r\n          id: session.user.id,\r\n          email: session.user.email || '',\r\n          created_at: session.user.created_at || new Date().toISOString(),\r\n          username: session.user.user_metadata?.username || '',\r\n        };\r\n        setUser(extendedUser);\r\n      } else {\r\n        setUser(null);\r\n      }\r\n      setLoading(false);\r\n    });\r\n\r\n    return () => subscription.unsubscribe();\r\n  }, []);\r\n\r\n  const signUp = async (email: string, password: string, username: string) => {\r\n    try {\r\n      const { data, error } = await supabase.auth.signUp({\r\n        email,\r\n        password,\r\n        options: {\r\n          data: {\r\n            username: username\r\n          }\r\n        }\r\n      });\r\n\r\n      if (error) throw error;\r\n\r\n      if (data.user) {\r\n        const { error: profileError } = await supabase\r\n          .from('users')\r\n          .insert([{ id: data.user.id, username, email }]);\r\n\r\n        if (profileError) throw profileError;\r\n      }\r\n    } catch (error) {\r\n      console.error('Signup error:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const signIn = async (email: string, password: string) => {\r\n    try {\r\n      const { error } = await supabase.auth.signInWithPassword({\r\n        email,\r\n        password,\r\n      });\r\n\r\n      if (error) throw error;\r\n    } catch (error) {\r\n      console.error('Signin error:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const signOut = async () => {\r\n    try {\r\n      const { error } = await supabase.auth.signOut();\r\n      if (error) throw error;\r\n    } catch (error) {\r\n      console.error('Signout error:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, loading, signUp, signIn, signOut }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}