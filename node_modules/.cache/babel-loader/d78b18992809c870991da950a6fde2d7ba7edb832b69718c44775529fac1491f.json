{"ast":null,"code":"import { supabase } from './supabaseClient';\nexport const insertTestProducts = async userId => {\n  const testProducts = [{\n    title: 'Vintage Camera',\n    description: 'A beautiful vintage film camera in excellent condition. Perfect for collectors or photography enthusiasts.',\n    starting_price: 150,\n    current_price: 150,\n    end_time: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000).toISOString(),\n    // 7 days from now\n    seller_id: userId,\n    status: 'active'\n    // Removed image_url\n  }, {\n    title: 'Gaming Console',\n    description: 'Latest generation gaming console with two controllers. Barely used and in perfect condition.',\n    starting_price: 400,\n    current_price: 400,\n    end_time: new Date(Date.now() + 5 * 24 * 60 * 60 * 1000).toISOString(),\n    // 5 days from now\n    seller_id: userId,\n    status: 'active'\n    // Removed image_url\n  }, {\n    title: 'Antique Watch',\n    description: 'Elegant mechanical watch from the 1950s. Recently serviced and keeps perfect time.',\n    starting_price: 300,\n    current_price: 300,\n    end_time: new Date(Date.now() + 3 * 24 * 60 * 60 * 1000).toISOString(),\n    // 3 days from now\n    seller_id: userId,\n    status: 'active'\n    // Removed image_url\n  }];\n  try {\n    const {\n      error\n    } = await supabase.from('products').insert(testProducts);\n    if (error) throw error;\n    console.log('Test products inserted successfully');\n  } catch (error) {\n    console.error('Error inserting test products:', error);\n  }\n};","map":{"version":3,"names":["supabase","insertTestProducts","userId","testProducts","title","description","starting_price","current_price","end_time","Date","now","toISOString","seller_id","status","error","from","insert","console","log"],"sources":["C:/Users/janu3/GitHub/Online-Auction/auction-system/src/utils/testData.ts"],"sourcesContent":["import { supabase } from './supabaseClient';\r\n\r\nexport const insertTestProducts = async (userId: string) => {\r\n  const testProducts = [\r\n    {\r\n      title: 'Vintage Camera',\r\n      description: 'A beautiful vintage film camera in excellent condition. Perfect for collectors or photography enthusiasts.',\r\n      starting_price: 150,\r\n      current_price: 150,\r\n      end_time: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000).toISOString(), // 7 days from now\r\n      seller_id: userId,\r\n      status: 'active'\r\n      // Removed image_url\r\n    },\r\n    {\r\n      title: 'Gaming Console',\r\n      description: 'Latest generation gaming console with two controllers. Barely used and in perfect condition.',\r\n      starting_price: 400,\r\n      current_price: 400,\r\n      end_time: new Date(Date.now() + 5 * 24 * 60 * 60 * 1000).toISOString(), // 5 days from now\r\n      seller_id: userId,\r\n      status: 'active'\r\n      // Removed image_url\r\n    },\r\n    {\r\n      title: 'Antique Watch',\r\n      description: 'Elegant mechanical watch from the 1950s. Recently serviced and keeps perfect time.',\r\n      starting_price: 300,\r\n      current_price: 300,\r\n      end_time: new Date(Date.now() + 3 * 24 * 60 * 60 * 1000).toISOString(), // 3 days from now\r\n      seller_id: userId,\r\n      status: 'active'\r\n      // Removed image_url\r\n    }\r\n  ];\r\n\r\n  try {\r\n    const { error } = await supabase\r\n      .from('products')\r\n      .insert(testProducts);\r\n\r\n    if (error) throw error;\r\n    console.log('Test products inserted successfully');\r\n  } catch (error) {\r\n    console.error('Error inserting test products:', error);\r\n  }\r\n};"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,kBAAkB;AAE3C,OAAO,MAAMC,kBAAkB,GAAG,MAAOC,MAAc,IAAK;EAC1D,MAAMC,YAAY,GAAG,CACnB;IACEC,KAAK,EAAE,gBAAgB;IACvBC,WAAW,EAAE,4GAA4G;IACzHC,cAAc,EAAE,GAAG;IACnBC,aAAa,EAAE,GAAG;IAClBC,QAAQ,EAAE,IAAIC,IAAI,CAACA,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,CAACC,WAAW,CAAC,CAAC;IAAE;IACxEC,SAAS,EAAEV,MAAM;IACjBW,MAAM,EAAE;IACR;EACF,CAAC,EACD;IACET,KAAK,EAAE,gBAAgB;IACvBC,WAAW,EAAE,8FAA8F;IAC3GC,cAAc,EAAE,GAAG;IACnBC,aAAa,EAAE,GAAG;IAClBC,QAAQ,EAAE,IAAIC,IAAI,CAACA,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,CAACC,WAAW,CAAC,CAAC;IAAE;IACxEC,SAAS,EAAEV,MAAM;IACjBW,MAAM,EAAE;IACR;EACF,CAAC,EACD;IACET,KAAK,EAAE,eAAe;IACtBC,WAAW,EAAE,oFAAoF;IACjGC,cAAc,EAAE,GAAG;IACnBC,aAAa,EAAE,GAAG;IAClBC,QAAQ,EAAE,IAAIC,IAAI,CAACA,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,CAACC,WAAW,CAAC,CAAC;IAAE;IACxEC,SAAS,EAAEV,MAAM;IACjBW,MAAM,EAAE;IACR;EACF,CAAC,CACF;EAED,IAAI;IACF,MAAM;MAAEC;IAAM,CAAC,GAAG,MAAMd,QAAQ,CAC7Be,IAAI,CAAC,UAAU,CAAC,CAChBC,MAAM,CAACb,YAAY,CAAC;IAEvB,IAAIW,KAAK,EAAE,MAAMA,KAAK;IACtBG,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAC;EACpD,CAAC,CAAC,OAAOJ,KAAK,EAAE;IACdG,OAAO,CAACH,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;EACxD;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}